#!/bin/bash
# Fame - Fine automated minecraft exports
# Written by Christer Jonassen
# Licensed under CC BY-NC-SA 3.0 (check LICENCE file or http://creativecommons.org/licenses/by-nc-sa/3.0/ for details.)
# Made possible by the wise *nix people sharing their knowledge online
#
# Check README for instructions


#TODO
# File validation - famecfgs and backups
# Plugin support
# Handle non existant directories tar/scp
# Advanced date/cleanup options
# Support custom tar/scp switches?
# Make fame ignore invalid lines in cfgs
# Handle unset variables
# Decent logging and error reporting
# Detect UTF8/terminal?
# Cron mode and contious mode
# Cleanup code and comment


# Variables: General
APPVERSION="0.1"
APPNAME="Fame"
MSG_OK=0
MSG_WARN=0
MSG_ERROR=0

# Variables: Gfx framework
## Colors
DEF="\x1b[0m"
#WHITE="\e[0;37m"
WHITE="\x1b[37;01m"
LIGHTBLACK="\x1b[30;01m"
BLACK="\x1b[0m\x1b[30;11m"
LIGHTBLUE="\x1b[34;01m"
BLUE="\x1b[0m\x1b[34;11m"
LIGHTCYAN="\x1b[36;01m"
CYAN="\x1b[0m\x1b[36;11m"
GRAY="\x1b[0m\x1b[37;11m"
LIGHTGREEN="\x1b[32;01m"
GREEN="\x1b[0m\x1b[32;11m"
LIGHTPURPLE="\x1b[35;01m"
PURPLE="\x1b[0m\x1b[35;11m"
LIGHTRED="\x1b[31;01m"
RED="\x1b[0m\x1b[31;11m"
LIGHTYELLOW="\x1b[33;01m"
YELLOW="\x1b[0m\x1b[33;11m"


## Gfx core
REDRAW="YES"
TOPLINE="4"
CURRENTLINE="$TOPLINE"
PREVIOUSCOLUMNS=`tput cols`
PREVIOUSLINES=`tput lines`

## Locations (Arrays containing X&Y coords)
POS_HEADERTOPLINE=(22 0)
POS_HEADERMIDTEXTFIELD=(24 1)
POS_HEADERBOTTOM=(0 4)
POS_COLUMN1=(0 $CURRENTLINE)
POS_COLUMN2=(24 $CURRENTLINE)
POS_COLUMN3=(44 $CURRENTLINE)
POS_CONSOLETOPLINE=(0 18)
POS_CONSOLETEXTFIELD=(0 19)
POS_CONSOLEBOTTOM=(0 79)
POS_CONSOLEBOTTOMTEXTFIELD1=(4 79)
POS_CONSOLEBOTTOMTEXTFIELD2=(54 79)


fametext=""$LIGHTCYAN"F"$WHITE"."$LIGHTCYAN"A"$WHITE"."$LIGHTCYAN"M"$WHITE"."$LIGHTCYAN"E""$DEF"

gfx()
{
	timeupdate
	case "$1" in
		
		core)
			case "$2" in
				goto)
					case "$3" in
						column)
							case "$4" in
								1)
								X=${POS_COLUMN1[0]}
								;;

								2)
								X=${POS_COLUMN2[0]}
								;;

								3)
								X=${POS_COLUMN3[0]}
								;;
							esac
							tput cup $CURRENTLINE $X
							if [ "$4" != "1" ] ; then echo -e -n " "; fi
						;;
						console)
							case "$4" in
								top)
								X=${POS_CONSOLETOPLINE[0]}
								Y=${POS_CONSOLETOPLINE[1]}
								;;

								textfield)
								X=${POS_CONSOLETEXTFIELD[0]}
								Y=${POS_CONSOLETEXTFIELD[1]}
								;;

								bottom)
								X=${POS_CONSOLEBOTTOM[0]}
								Y=${POS_CONSOLEBOTTOM[1]}
								;;


								bottomtextfield1)
								X=${POS_CONSOLEBOTTOMTEXTFIELD1[0]}
								Y=${POS_CONSOLEBOTTOMTEXTFIELD1[1]}
								;;


								bottomtextfield2)
								X=${POS_CONSOLEBOTTOMTEXTFIELD2[0]}
								Y=${POS_CONSOLEBOTTOMTEXTFIELD2[1]}
								;;
								
							esac
							tput cup $Y $X
						;;
						*)
							#tput cup Y X
							tput cup $4 $3
						;;
					esac
				;;
				
				termreset)
					echo Terminal size changed, resetting...
					PREVIOUSCOLUMNS=`tput cols`
					PREVIOUSLINES=`tput lines`
					REDRAW=YES
					reset
				;;

				sticky)
					case "$3" in
						on)
							STICKY=YES
						;;

						off)
							STICKY=NO
						;;

						save)
							tput sc
						;;

						goto)
							tput rc
						;;

					esac
				;;

				*)
				;;
			esac
		;;




		draw)
			case "$2" in
				splash)
					clear
					echo
					echo
					echo
					echo          
					echo
					echo
					echo
					echo -e ""$LIGHTCYAN"                ::::::::::       :::           :::   :::       :::::::::    "
					echo -e ""$LIGHTCYAN"               :+:            :+: :+:        :+:+: :+:+:      :+:           "
					echo -e ""$LIGHTCYAN"              +:+           +:+   +:+      +:+ +:+:+ +:+     +:+            "
					echo -e ""$LIGHTCYAN"             :#::+::#     +#++:++#++:     +#+  +:+  +#+     +#++:++#        "
					echo -e ""$LIGHTCYAN"            +#+          +#+     +#+     +#+       +#+     +#+              "
					echo -e ""$CYAN"           #+#          #+#     #+#     #+#       #+#     #+#               "
					echo -e ""$CYAN"          ###      "$WHITE" * "$CYAN" ###     ### "$WHITE" * "$CYAN" ###       ### "$WHITE" * "$CYAN" ##########         "
					echo
					echo -e ""$GRAY"                    Fine "$LIGHTBLACK"-"$GRAY" Automated "$LIGHTBLACK"-"$GRAY" Minecraft "$LIGHTBLACK"-"$GRAY" Exports"
					echo
					echo
					echo -e "                            "$LIGHTBLACK"Cj Designs/"$LIGHTBLACK"CSDNSERVER.COM"
					echo
					echo
					echo
					sleep 2
					clear
				;;

				header)
					case "$3" in

						top)
							clear
							echo -e "$fametext"$GRAY" build $APPVERSION"$RED"      _________________________________________________________" 
						;;

						middle)
							echo -e ""$RED"______________________/"$GRAY" "$GREEN"  $MSG_OK"$GRAY" Successful backup(s), "$YELLOW"  $MSG_WARN"$GRAY" Warning(s), "$RED"  $MSG_ERROR"$GRAY" Error(s)."
						;;

						update)
							gfx core goto ${POS_HEADERMIDTEXTFIELD[0]} ${POS_HEADERMIDTEXTFIELD[1]}
							echo -e -n ""$GREEN"  $MSG_OK"$GRAY" Successful backup(s), "$YELLOW"  $MSG_WARN"$GRAY" Warning(s), "$RED"  $MSG_ERROR"$GRAY" Error(s)."
						;;

						bottom)
							echo
							echo -e ""$LIGHTCYAN"SERVER DESCRIPTION       SCREEN              CURRENT STATUS"$GRAY""
						;;

					esac
				;;

				line)
					case "$3" in

						underscore)
							echo -e ""$LIGHTBLACK"________________________________________________________________________________"$DEF""
						;;

						slash)
							echo -e ""$RED"////////////////////////////////////////////////////////////////////////////////"$DEF""
						;;

						hyphen)
							echo -e ""$LIGHTBLACK"--------------------------------------------------------------------------------"$DEF""
						;;

						consoletop)
							echo -e ""$LIGHTBLACK"------------------------ "$RED"- "$GRAY"F.A.M.E Log viewer console "$RED"- "$LIGHTBLACK"------------------------"$DEF""
						;;

						consolebottom)
							echo -n -e ""$LIGHTBLACK"--------------------------------------------------------------------------------"$DEF""
						;;

					esac
				;;
				*)
				;;
			esac
		;;


		write)
			case "$2" in
				column)
					gfx core goto column $3
					if [ "$STICKY" == "YES" ] ; then gfx core sticky save; fi
					case "$3" in
						1)
							tput el
							echo $SERVERDESC
						;;

						2)
							tput el
							echo $SERVERSCREEN
						;;

						3)
							tput el
							echo -e -n ""$LIGHTGREEN">"$GRAY" $4"
						;;
					esac
					if [ "$STICKY" == "YES" ] ; then gfx core sticky goto; fi
				;;

				console)
					case "$3" in
						load)
						gfx core goto console bottomtextfield1
						echo -e -n " "$GRAY"Load:`uptime | awk -F'load average:' '{ print $2 }'` "
						;;

						time)
						gfx core goto console bottomtextfield2
						echo -e -n " "$GRAY"$HMS, $DATEFUZZY"$DEF" "
						;;
					esac
				;;
					
			esac
		;;

		action)
			case "$2" in
				*)
				;;
			esac
		;;
	esac
}


timeupdate() # Sets current time into different variables. Used for timestamping etc.
{
	DATE=$(date +"%d-%m-%Y") 			# 12-04-2013 (day-month-year)
	SHORTDATE=$(date +"%d-%m-%y")		# 12-04-13
	DATEFUZZY=$(date +"%a %d %b")		# Fri 12 Apr
	MCSTAMP=$(date +"%Y-%m-%d %R:%S")	# 2013-04-12 15:34:13 (mc server log format)
	UNIXSTAMP=$(date +%s)				# 1365773648 (unix timestamp)
	NOWSTAMP=$(date +"%Hh%Mm%Ss") 		# 15h34m34s
	HM=$(date +"%R") 					# 15:34
	HMS=$(date +"%R:%S") 				# 15:34:34
	HOUR=$(date +"%H") 					# 15
	MINUTE=$(date +"%M") 				# 34
	SEC=$(date +"%S") 					# 56
}




startup()
{
	echo lol
}


fameprocess()
{
			while read HOSTENTRY ; do
				fm
				gfx write console load
				SERVERDESC=`echo $HOSTENTRY | awk -F":" '{print $1}' $2`
				SERVERSCREEN=`echo $HOSTENTRY | awk -F":" '{print $2}' $2`
				SERVERPATH=`echo $HOSTENTRY | awk -F":" '{print $3}' $2`

				BACKUPPATH="/home/christer/famebackups/$SERVERSCREEN"
				BKSTAMP=""$SERVERSCREEN"_$(date +"%m-%d-%Y")_$(date +"%H%M")_fbck.tar.gz"
				LATESTSTAMP=""$SERVERSCREEN"_latest_fbck.tar.gz"
				CURRENTARCHIVE="$BACKUPPATH/$BKSTAMP"
				ERASEOLDERTHAN="20"

				SCPSERVER="mayuri"
				SCPUSER="christer"
				SCPPATH="/home/christer/fametest"
				SCPPORT="22"

				gfx write column 1
				gfx write column 2

				fm backup
				fm upload
				fm cleanup
				
				fm notify cs "Completed @ $HMS, $DATEFUZZY"

				CURRENTLINE=$(( CURRENTLINE + 1))
				MSG_OK=$(( MSG_OK + 1))
				gfx draw header update

			
			done < world.lst
			gfx core goto 0 $CURRENTLINE
}


fm() # Main fame framework, combines other functions in powerful subfunctions
{
	timeupdate
#	echo DEBEWG:1:$1 2:$2 3:$3
	case "$1" in
		notify)
			case "$2" in
				mc)
				screen -x $SERVERSCREEN -X stuff "`printf "say $3\r"`"
				;;

				log)
				echo "$MCSTAMP [INFO][$SERVERSCREEN] $3">>famesys.log
				echo "$MCSTAMP [INFO][$SERVERSCREEN] $3">>famedebug.log
				fm console refresh
				;;

				cs) # Changes current status on the active server
				gfx core sticky save
				gfx write column 3 "$3"
				gfx core sticky goto
				;;

				*)
				fm notify mc "$2"
				fm notify log "$2"
				fm notify cs "$2"
				;;

			esac
		;;

		backup)
				fm notify "Initializing backup.."
				fm notify "Disabling world saving.."
				screen -x $SERVERSCREEN -X stuff "`printf "save-off\r"`"
				sleep 1
				fm notify cs "\e[5;37;01mCreating compressed backup..\e[m\n"
#				tar -cpvzf $CURRENTARCHIVE $SERVERPATH >> fametar.log
				tar -cpvzf $CURRENTARCHIVE -C / $SERVERPATH >> famedebug.log 2>&1
				sleep 1
				fm notify "Enabling world saving.."
				screen -x $SERVERSCREEN -X stuff "`printf "save-on\r"`"
				fm notify "Backup complete!"
		;;

		upload)
				fm notify cs "Initializing export.."
				fm notify cs "\e[5;37;01mUploading to $SCPSERVER\e[m\n"
				echo "scp -P $SCPPORT $CURRENTARCHIVE $SCPUSER@$SCPSERVER:$SCPPATH/$SERVERSCREEN/$LATESTSTAMP" >> famedebug.log
				scp -P $SCPPORT $CURRENTARCHIVE $SCPUSER@$SCPSERVER:$SCPPATH/$SERVERSCREEN/$LATESTSTAMP >> famedebug.log 2>&1
		;;

		cleanup)
				fm notify cs "Erasing files (age $ERASEOLDERTHAN mins)"
				find $BACKUPPATH/*_fbck.tar.gz -type f -mmin +$ERASEOLDERTHAN | echo >> famedebug.log 2>&1 # Output files that will be erased
				find $BACKUPPATH/*_fbck.tar.gz -type f -mmin +$ERASEOLDERTHAN -delete >> famedebug.log 2>&1
				sleep 3
		;;

		console)
			gfx core sticky save
			case "$2" in
				init)
					gfx core goto console top
					gfx draw line consoletop
					gfx core goto console bottom
					gfx draw line consolebottom
				;;

				refresh)
					local IFS=$'\n'
					gfx core goto console textfield
						for outputline in $( tail -n 4 famesys.log ); do
						tput el
						echo -e "$LIGHTBLACK""$outputline""$DEF"
					done
					gfx write console time
				;;

			esac
			gfx core sticky goto
			;;

	esac
}

#actual runscript

clear
gfx draw splash # Display splash screen with logo
gfx draw header top
gfx draw header middle
gfx draw header bottom
fm console init
fameprocess


#cho -e "Server Description       Screen              Current status
#echo -e "CSDN World T             mc-worldt           "$LIGHTGREEN"> "$WHITE"Exporting to remote location..."$DEF""


# gfx core goto ${POS_HEADERMIDTEXTFIELD[0]} ${POS_HEADERMIDTEXTFIELD[1]}
#echo -e "CSDN Tekkit II           mc-tekkit2          Last backup @ 18.Mar - 22:01:52"
#timeupdate
#echo -e ""$DEF"Backupstamp: $BKSTAMP"
#notify "Fametest @ $NOWSTAMP"
