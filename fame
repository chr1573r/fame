#!/bin/bash
# Fame - Fine automated minecraft exports
# Written by Christer Jonassen
# Licensed under CC BY-NC-SA 3.0 (check LICENCE file or http://creativecommons.org/licenses/by-nc-sa/3.0/ for details.)
# Made possible by the wise *nix people sharing their knowledge online
#
# Check README for instructions


# Variables
APPVERSION="0.1"
APPNAME="Fame"
REDRAW="YES"
TOPLINE="4"
CURRENTLINE="$TOPLINE"
PREVIOUSCOLUMNS=`tput cols`
PREVIOUSLINES=`tput lines`
# Pretty colors for the terminal:
DEF="\x1b[0m"
#WHITE="\e[0;37m"
WHITE="\x1b[37;01m"
LIGHTBLACK="\x1b[30;01m"
BLACK="\x1b[0m\x1b[30;11m"
LIGHTBLUE="\x1b[34;01m"
BLUE="\x1b[0m\x1b[34;11m"
LIGHTCYAN="\x1b[36;01m"
CYAN="\x1b[0m\x1b[36;11m"
GRAY="\x1b[0m\x1b[37;11m"
LIGHTGREEN="\x1b[32;01m"
GREEN="\x1b[0m\x1b[32;11m"
LIGHTPURPLE="\x1b[35;01m"
PURPLE="\x1b[0m\x1b[35;11m"
LIGHTRED="\x1b[31;01m"
RED="\x1b[0m\x1b[31;11m"
LIGHTYELLOW="\x1b[33;01m"
YELLOW="\x1b[0m\x1b[33;11m"

fametext=""$LIGHTCYAN"F"$WHITE"."$LIGHTCYAN"A"$WHITE"."$LIGHTCYAN"M"$WHITE"."$LIGHTCYAN"E""$DEF"

gfx()
{
	timeupdate
	case "$1" in
		
		splash)
			clear
			echo
			echo
			echo
			echo          
			echo
			echo
			echo
			echo -e ""$LIGHTCYAN"                ::::::::::       :::           :::   :::       :::::::::    "
			echo -e ""$LIGHTCYAN"               :+:            :+: :+:        :+:+: :+:+:      :+:           "
			echo -e ""$LIGHTCYAN"              +:+           +:+   +:+      +:+ +:+:+ +:+     +:+            "
			echo -e ""$LIGHTCYAN"             :#::+::#     +#++:++#++:     +#+  +:+  +#+     +#++:++#        "
			echo -e ""$LIGHTCYAN"            +#+          +#+     +#+     +#+       +#+     +#+              "
			echo -e ""$CYAN"           #+#          #+#     #+#     #+#       #+#     #+#               "
			echo -e ""$CYAN"          ###      "$WHITE" * "$CYAN" ###     ### "$WHITE" * "$CYAN" ###       ### "$WHITE" * "$CYAN" ##########         "
			echo
			echo -e ""$GRAY"                    Fine "$LIGHTBLACK"-"$GRAY" Automated "$LIGHTBLACK"-"$GRAY" Minecraft "$LIGHTBLACK"-"$GRAY" Exports"
			echo
			echo
			echo -e "                            "$LIGHTBLACK"Cj Designs/"$LIGHTBLACK"CSDNSERVER.COM"
			echo
			echo
			echo
			sleep 1
			clear
		;;

		header)
			case "$2" in
				top)
					clear
					echo -e "$fametext"$GRAY" build $APPVERSION"$RED"      _________________________________________________________" 
				;;

				middle)
					echo -e ""$RED"______________________/    "$LIGHTGREEN"0"$GRAY" Successful backups,  "$LIGHTYELLOW"49"$GRAY" Warning(s),   "$LIGHTRED"2"$GRAY" Error(s)"
				;;

				bottom)
					echo
					echo -e ""$LIGHTCYAN"SERVER DESCRIPTION       SCREEN              CURRENT STATUS"$GRAY""
				;;
			esac

		;;

		line)
			echo -e ""$LIGHTBLACK"________________________________________________________________________________"$DEF""
		;;
		meshline)
			echo -e ""$LIGHTBLACK"////////////////////////////////////////////////////////////////////////////////"$DEF""
		;;
		dotline)
			echo -e ""$LIGHTBLACK"--------------------------------------------------------------------------------"$DEF""
		;;

		goto)
			case "$2" in
				column)
					case "$3" in
						1)
						X=0
						;;

						2)
						X=24
						;;

						3)
						X=44
						;;
					esac
					tput cup $CURRENTLINE $X
					if [ "$3" != "1" ] ; then echo -e -n " "; fi
				;;
			esac
		;;

		write)
			case "$2" in
				column)
					gfx goto column $3
					case "$3" in
						1)
							echo $SERVERDESC
						;;

						2)
							echo $SERVERSCREEN
						;;

						3)
							echo -e ""$LIGHTGREEN">"$GRAY" $4"
						;;
					esac
				;;
			esac
		;;

		termreset)
			echo Terminal size changed, resetting...
			PREVIOUSCOLUMNS=`tput cols`
			PREVIOUSLINES=`tput lines`
			REDRAW=YES
			reset
			gfx header
		;;
	esac


}

timeupdate() # Sets current time into different variables. Used for timestamping etc.
{
	DATE=$(date +"%d-%m-%Y")
	UNIXSTAMP=$(date +%s)
	BKSTAMP=""$SERVERSCREEN"_backup_$(date +"%m-%d-%Y")_$(date +"%Hh%Mm%Ss")_fbck.tar.gz"
	NOWSTAMP=$(date +"%Hh%Mm%Ss")
	HM=$(date +"%R")
	HMS=$(date +"%R:%S")
	HOUR=$(date +"%H")
	MINUTE=$(date +"%M")
	SEC=$(date +"%S")
}




startup()
{
	echo lol
}


fameprocess()
{
			while read HOSTENTRY ; do

				SERVERDESC=`echo $HOSTENTRY | awk -F":" '{print $1}' $2`
				SERVERSCREEN=`echo $HOSTENTRY | awk -F":" '{print $2}' $2`
				SERVERPATH=`echo $HOSTENTRY | awk -F":" '{print $3}' $2`
			
			done < world.lst
}



backup()
{
	screen -x $SERVERSCREEN -X stuff "`printf "save-off\r"`"
	echo -e "tar -cpvzf $SERVERPATH/../backup/$BKSTAMP $SERVERPATH"

	screen -x $SERVERSCREEN -X stuff "`printf "save-on\r"`"

}

#mc()
#{
#	case "$1" in
#	save-on)
#		echo lol
#		;;
#
#		save-off)
#		echo lol
#		;;
#}

notify()
{
	case "$1" in
		mc)
		screen -x $SERVERSCREEN -X stuff "`printf "say $2\r"`"
		;;

		log)
		echo "[$HMS] $2">>fame.log
		;;

		console)
		#echo lol
		;;

		*)
		notify mc "$1"
		notify log "$1"
		notify console "$1"
		;;
#	screen -x $SCREENNAME -X stuff "`printf "say Startar oppbakking av verda\r"`"
	esac
}


exporting()
{
	echo lol
}


upload()
{
	echo lol
}


archive()
{
	echo lol
}


cleanup()
{
	echo lol
}


#actual runscript

clear
gfx splash # Display splash screen with logo
gfx header top
gfx header middle
gfx header bottom
fameprocess

#cho -e "Server Description       Screen              Current status
#echo -e "CSDN World T             mc-worldt           "$LIGHTGREEN"> "$WHITE"Exporting to remote location..."$DEF""
gfx write column 1
gfx write column 2
gfx write column 3 "Creating tar.gz archive.."
#echo -e "CSDN Tekkit II           mc-tekkit2          Last backup @ 18.Mar - 22:01:52"
#timeupdate
#echo -e ""$DEF"Backupstamp: $BKSTAMP"
#notify "Fametest @ $NOWSTAMP"
